{"version":3,"sources":["Components/Header.js","Components/Scoreboard.js","Components/CardName.js","Components/CardImage.js","Components/Card.js","Components/Library.js","Components/GameEndOverlay.js","Components/GameController.js","App.js","index.js"],"names":["PokedexObj","Pokedex","Header","useState","image","setImage","useEffect","a","getPokemonByName","pokemonImage","sprites","front_default","fetchImage","catch","error","console","log","id","src","alt","Scoreboard","props","currScore","highScore","CardName","name","setName","pokemonName","fetchName","className","CardImage","other","Card","onClick","checkCardsChosen","Library","idArray","map","GameEndOverlay","gameEndScore","turnOffOverlay","GameController","numCards","setNumCards","setIdArray","cardsChosen","setCardsChosen","setCurrScore","setHighScore","setGameEndScore","sliderValue","setSliderValue","newGame","generateIdArray","newArr","length","Math","floor","random","indexOf","push","cardId","tempArray","i","j","shuffleCards","type","min","max","value","onChange","e","target","onMouseUp","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19116663.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Pokedex } from 'pokeapi-js-wrapper';\n\nconst PokedexObj = new Pokedex()\n\nconst Header = () => {\n\n    const [image, setImage] = useState();\n\n    useEffect(()=>{\n        async function fetchImage (){\n            const pokemonImage = await PokedexObj.getPokemonByName(25);\n            setImage(pokemonImage.sprites.front_default);\n        }\n\n        fetchImage()\n        .catch (error=>{\n            console.log('Error: '+error);\n        });\n        \n    },[]);\n\n    return (\n        <div id='headerContainer'>\n            <div id='headerTitleContainer'>\n                <img src={image} alt='pikachuLogo'></img>\n                <div id='headerTitle'>Pokémon Memory Game</div>\n            </div>\n            {/* <div id='gameInstructions'>Click on a Pokémon you haven't clicked yet!</div> */}\n        </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nconst Scoreboard = (props) => {\n\n    return (\n        <div id='scoreboardContainer'>\n            <div id='currentScore'>Current Score: {props.currScore}</div>\n            <div id='highestScore'>High Score: {props.highScore}</div>\n        </div>\n    )\n}\n\nexport default Scoreboard;","import React, { useEffect, useState} from 'react';\nimport { Pokedex } from 'pokeapi-js-wrapper';\n\nconst PokedexObj = new Pokedex()\n\nconst CardName = (props) => {\n\n    const [name, setName] = useState('');\n\n    useEffect(()=>{\n        async function fetchName (){\n            const pokemonName = await PokedexObj.getPokemonByName(props.id);\n            setName(pokemonName.name);\n        }\n\n        fetchName()\n        .catch (error=>{\n            console.log('Error: '+error);\n        });\n        \n    },[props]);\n\n\n    return (\n        <div className='cardName'>\n            {name}\n        </div>\n    )\n}\n\nexport default CardName;","import React, { useEffect, useState} from 'react';\nimport { Pokedex } from 'pokeapi-js-wrapper';\n\nconst PokedexObj = new Pokedex()\n\nconst CardImage = (props) => {\n\n    const [image, setImage] = useState();\n\n    useEffect(()=>{\n        async function fetchImage (){\n            const pokemonImage = await PokedexObj.getPokemonByName(props.id);\n            setImage(pokemonImage.sprites.other[\"official-artwork\"].front_default);\n        }\n\n        fetchImage()\n        .catch (error=>{\n            console.log('Error: '+error);\n        });\n        \n    },[props]);\n    \n    return (\n        <div className='cardImage'>\n            <img src={image} alt={`pokemon ${props.id}`}></img>\n        </div>\n    )\n}\n\nexport default CardImage;","import React from \"react\";\nimport CardName from './CardName';\nimport CardImage from './CardImage';\n\nconst Card = (props) => {\n\n    return (\n        <div className='cardContainer' id={props.id} onClick={()=>props.checkCardsChosen(props.id)}>\n            <CardImage id={props.id}/>\n            <CardName id={props.id}/>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport Card from './Card';\n\nconst Library = (props) => {\n\n    return (\n        <div id='libraryContainer'>\n            {props.idArray.map((id)=>{\n                return <Card key={id} id={id} checkCardsChosen={props.checkCardsChosen}/>\n            })}\n        </div>\n    )\n}\n\nexport default Library;","import React from \"react\";\n\nconst GameEndOverlay = (props) => {\n\n\n    return (\n        <div id='gameEndOverlayContainer'>\n            <div id='gameEndMessage'>\n                Your score was {props.gameEndScore}. Play Again?\n            </div>\n            <button onClick={props.turnOffOverlay} id='btnPlayAgain'>Play again</button>\n        </div>\n    )\n}\n\nexport default GameEndOverlay;","import React, { useEffect, useState } from \"react\";\nimport Scoreboard from './Scoreboard'\nimport Library from './Library';\nimport GameEndOverlay from './GameEndOverlay';\n\nconst GameController = () => {\n\n    const [numCards, setNumCards] = useState(10);\n    const [idArray, setIdArray] = useState([]);\n    const [cardsChosen, setCardsChosen] = useState([]);\n    const [currScore, setCurrScore] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n    const [gameEndScore, setGameEndScore] = useState('');\n    const [sliderValue, setSliderValue] = useState(10);\n\n\n    const shuffleCards = () => {\n        // https://stackoverflow.com/a/12646864 Durstenfeld shuffle\n        let tempArray = [...idArray];\n        for (let i = tempArray.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [tempArray[i], tempArray[j]] = [tempArray[j], tempArray[i]];\n        }\n        setIdArray(tempArray);\n    }\n\n    const resetCardsChosen = () =>{\n        setCardsChosen([]);\n    }\n\n    const resetCurrScore = () => {\n        setCurrScore(0);\n    }\n\n    const incrementCurrScore = () =>{\n        setCurrScore(currScore+1);\n    }\n\n    const updateHighScore = () => {\n        if (currScore>highScore){\n            setHighScore(currScore);\n        }\n    }\n\n    const turnOffOverlay = () => {\n        setGameEndScore('');\n    }\n\n    const updateGameEndScore = () => {\n        setGameEndScore(currScore);\n    }\n\n    const newGame = () =>{\n        updateGameEndScore();\n        updateHighScore();\n        resetCurrScore();\n        resetCardsChosen();\n        generateIdArray(numCards);\n    }\n\n    useEffect(()=>{\n        // checks if game win\n        if (currScore===numCards){\n            newGame();\n\n        }\n    },[currScore])\n\n    const checkCardsChosen = (cardId) => {\n        // check if card is in cardsChosen array\n\n        // if clicked new card\n        if (cardsChosen.indexOf(cardId)===-1){\n            incrementCurrScore();\n            setCardsChosen([...cardsChosen,cardId]);\n            shuffleCards();\n        } else {\n            // clicked a previously clicked card, lose\n            // reset score\n            // display game over overlay with new game button\n            // new cards\n            newGame();\n        }\n    }\n\n    const generateIdArray = (numCards) => {\n        // generate array of numCards=10 pokemon's IDs, from 1-893 (gen 1-8)\n        const newArr = [];\n        while(newArr.length<numCards){\n            const id = Math.floor(Math.random() * 893) + 1;\n            if (newArr.indexOf(id)===-1){\n                newArr.push(id);\n            }\n        }\n        setIdArray(newArr);\n    }\n\n    // testing pokemon api, calls after initial render, and when numCards changes\n    useEffect(()=>{\n        newGame();\n        turnOffOverlay();\n    },[numCards]);\n\n    const onChange = (e) => {\n        setSliderValue(e.target.value);\n    }\n\n    const handleSliderChange = (e) =>{\n        setSliderValue(e.target.value);\n        setNumCards(sliderValue);\n    }\n\n    useEffect(()=>{\n        if (cardsChosen.length>=numCards){\n            newGame();\n        }\n    },[cardsChosen])\n\n    return (\n        <div id='gameContainer'>\n            {/* {gameEndScore ? null : <Scoreboard currScore={currScore} highScore={highScore}/>} */}\n            <Scoreboard currScore={currScore} highScore={highScore}/>\n            {gameEndScore ? null : <Library idArray={idArray} checkCardsChosen={checkCardsChosen}/>}\n            {gameEndScore ? <GameEndOverlay gameEndScore={gameEndScore} turnOffOverlay={turnOffOverlay} /> : null}\n            {gameEndScore ? null : (<div id='sliderContainer'>\n                                        <input \n                                            type='range'\n                                            id='numCardsSlider'\n                                            min='2'\n                                            max='15'\n                                            value={sliderValue}\n                                            onChange={onChange}\n                                            onMouseUp={handleSliderChange}\n                                        />\n                                        <div id='sliderValueText'>{sliderValue}</div>\n                                    </div>)}\n        </div>\n    )\n}\n\nexport default GameController;","import React from \"react\";\nimport './App.css'\nimport Header from './Components/Header';\nimport GameController from './Components/GameController';\n\n\nconst App = () =>{\n  return (\n    <div id='wholeContainer'>\n      <Header/>\n      <GameController/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}